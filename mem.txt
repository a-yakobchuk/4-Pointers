==1672== Memcheck, a memory error detector
==1672== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1672== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==1672== Command: ./simpleTest 0
==1672== 
The list has 0 elements
From the front:

From the back:

Removing one element from the front
Attempted to remove front of list, list was empty. 

Destroying the linked list
==1672== 
==1672== HEAP SUMMARY:
==1672==     in use at exit: 0 bytes in 0 blocks
==1672==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==1672== 
==1672== All heap blocks were freed -- no leaks are possible
==1672== 
==1672== For counts of detected and suppressed errors, rerun with: -v
==1672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1673== Memcheck, a memory error detector
==1673== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1673== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==1673== Command: ./simpleTest 1
==1673== 
The list has 1 elements
From the front:
Node 0 has value 'First Line'

From the back:
Node 0 has value 'First Line'

Removing one element from the front
Nothing left in the list, no front
Removed value is: First Line 

Destroying the linked list
==1673== 
==1673== HEAP SUMMARY:
==1673==     in use at exit: 0 bytes in 0 blocks
==1673==   total heap usage: 2 allocs, 2 frees, 528 bytes allocated
==1673== 
==1673== All heap blocks were freed -- no leaks are possible
==1673== 
==1673== For counts of detected and suppressed errors, rerun with: -v
==1673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1674== Memcheck, a memory error detector
==1674== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1674== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==1674== Command: ./simpleTest 2
==1674== 
The list has 2 elements
From the front:
Node 0 has value 'First Line'
Node 1 has value 'Second Line'

From the back:
Node 0 has value 'Second Line'
Node 1 has value 'First Line'

Removing one element from the front

Remove from front of list, new front is: 'Second Line' 
Removed value is: First Line 

Destroying the linked list
==1674== 
==1674== HEAP SUMMARY:
==1674==     in use at exit: 0 bytes in 0 blocks
==1674==   total heap usage: 4 allocs, 4 frees, 1,056 bytes allocated
==1674== 
==1674== All heap blocks were freed -- no leaks are possible
==1674== 
==1674== For counts of detected and suppressed errors, rerun with: -v
==1674== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1676== Memcheck, a memory error detector
==1676== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1676== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==1676== Command: ./simpleTest 3
==1676== 
The list has 3 elements
From the front:
Node 0 has value 'First Line'
Node 1 has value 'Second Line'
Node 2 has value 'Third Line'

From the back:
Node 0 has value 'Third Line'
Node 1 has value 'Second Line'
Node 2 has value 'First Line'

Removing one element from the front

Remove from front of list, new front is: 'Second Line' 
Removed value is: First Line 

Destroying the linked list
==1676== 
==1676== HEAP SUMMARY:
==1676==     in use at exit: 0 bytes in 0 blocks
==1676==   total heap usage: 6 allocs, 6 frees, 1,584 bytes allocated
==1676== 
==1676== All heap blocks were freed -- no leaks are possible
==1676== 
==1676== For counts of detected and suppressed errors, rerun with: -v
==1676== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1677== Memcheck, a memory error detector
==1677== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1677== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==1677== Command: ./simpleTest 4
==1677== 
The list has 4 elements
From the front:
Node 0 has value 'First Line'
Node 1 has value 'Second Line'
Node 2 has value 'Third Line'
Node 3 has value 'Fourth Line'

From the back:
Node 0 has value 'Fourth Line'
Node 1 has value 'Third Line'
Node 2 has value 'Second Line'
Node 3 has value 'First Line'

Removing one element from the front

Remove from front of list, new front is: 'Second Line' 
Removed value is: First Line 

Destroying the linked list
==1677== 
==1677== HEAP SUMMARY:
==1677==     in use at exit: 0 bytes in 0 blocks
==1677==   total heap usage: 8 allocs, 8 frees, 2,112 bytes allocated
==1677== 
==1677== All heap blocks were freed -- no leaks are possible
==1677== 
==1677== For counts of detected and suppressed errors, rerun with: -v
==1677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
